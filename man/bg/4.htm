<!DOCTYPE html>
<html><head>
<meta charset="utf-8"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="">
<meta name="author" content="Radostin Dimitrov">
<title>2019-07-01</title>
<link rel="stylesheet" href="https://n2o.dev/blank.css?v=2"></head>
<body><nav>
    <a href="../../index.html">PLM</a>
    <div class="dropdown">
       <a onclick="dropChap()" class="dropbtn">Част 4</a>
    <div id="dropdownCHAPTER" class="dropdown-content">
       <a href="1.htm">Част 1</a>
       <a href="2.htm">Част 2</a>
       <a href="3.htm">Част 3</a>
       <a href="4.htm" style="background:#ededed;">Част 4</a>
       <a href="5.htm">Част 5</a>
       <a href="6.htm">Част 6</a>
       <a href="7.htm">Част 7</a>
     </div>
     </div>
    <div class="dropdownLANG">
       <a onclick="dropLang()" class="dropbtn"  >BG</a>
    <div id="dropdownLANG" class="dropdown-content">
       <a href="../ua/4.htm">UA</a>
       <a href="../bg/4.htm" style="background:#ededed;">BG</a>
       <a href="../ru/4.htm">RU</a>
     </div>
     </div>
</nav>
<header>
</header><main>
    <section>
        <h3>Част 4. Администратор на данни</h3>

        <p>В този раздел демонстрираме как може да бъде написан "зрител" на KVS верига използвайки NITRO за визуализиране и N2O за  !!!!!!!!!!!!!!.</p>

    </section>
    <section>
    <h3>Изложение на проблема</h3>
    <h3>Страницит</h3>
    <h4>KVS.Index</h4>
    <figure><img src="../images/2.png"></figure>
 
    <figure><code>
  def event(:init)
  def event(:writers)
  def event({:link,id})
  def event(:user)
  def event(:session)
  def event(:enode)
    </code></figure>

      <p>
      В червен цвчт са маркирани онези идентификаторите на DOM елементи, които
      ще бъдат заменени от сървара с нови елементи и отговарящи стойности.По начина,
      по който е в LiveView и дори в PHP! Но за разлика от използването на <a
      href="https://tonpa.guru/stream/2013/2013-02-28%20Suck%20and%20Blow.htm">Suck
      and Blow notation</a> за шаблон, също като ASP, PHP, EEX, DTL и други, NITRO
      предлага изразяване на HTML5 използвайки чист Erlang и е рамка, който заема 
      достойно място в класа си: OCaml Ocsigen, Scala Асансьор, SML UrWeb, F#
      WebSharper, Erlang Nitrogen. Основната идея е, че пишем всичко на един език и
      учим начинаещи на един език, а в същото време ви показваме как да напишете
      просто уеб-базирано приложение, което ви помага да влезете по-бързо в езика.
      </p>
       

       <h4>priv/static/kvs.htm</h4>
   <figure><code>
&lt;nav&gt;
  &lt;a href='login.htm'&gt;LOGIN&lt;/a&gt;
  &lt;a href='plm.htm'&gt;PLM&lt;/a&gt;
  &lt;a href='bpe.htm'&gt;BPE&lt;/a&gt;
  &lt;a href='form.htm'&gt;FORM&lt;/a&gt;
  &lt;a href='kvs.htm'&gt;KVS&lt;/a&gt;
&lt;/nav&gt;

&lt;aside&gt;
  &lt;article&gt;
    &lt;section&gt;
      &lt;h2&gt;KVS&lt;/h2&gt;
      &lt;p&gt;Abstract chain database&lt;/p&gt;
      &lt;div&gt;USER: &lt;span id=<font color="red">user</font>&gt;&lt;/span&gt;
            SSD: &lt;span id=<font color="red">disc</font>&gt;&lt;/span&gt;
            RAM: &lt;span id=<font color="red">ram</font>&gt;&lt;/span&gt;&lt;br&gt;
        SESSION: &lt;span id=<font color="red">session</font>&gt;&lt;/span&gt;
             VM: &lt;span id=<font color="red">enode</font>&gt;&lt;/span&gt;&lt;/div&gt;
    &lt;/section&gt;
    &lt;div class=container&gt;
      &lt;div&gt;&lt;h2&gt;WRITERS&lt;/h2&gt;
      &lt;div id=<font color="red">writers</font>&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;div&gt;&lt;h2&gt;CHAINS&lt;/h2&gt;
      &lt;div id=<font color="red">feeds</font>&gt;To display the chain
              select the writer.&lt;/div&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/aside&gt;
    </code></figure>

    <h4>lib/events/kvs.ex</h4>

   <figure><code>
defmodule <font color="red">KVS.Index</font> do
  use N2O, with: [:n2o, :nitro]
  use FORM
  use KVS
  require ERP
  require Logger

  def parse(ERP."Employee"(person:
            ERP."Person"(cn: name))),
  do: name
  def parse(_), do: []

  def event(:init),
    do:
      [<font color="red">:user</font>, <font color="red">:writers</font>, <font color="red">:session</font>, <font color="red">:enode</font>]
      |&gt; Enum.map(fn x -&gt;
       [ NITRO.clear(x),
         send(self(), {:direct, x})] end)

  def event(<font color="red">:user</font>),
  do: NITRO.update(<font color="red">:user</font>,
      span(body: parse(:n2o.user())))

  def event(<font color="red">:session</font>),
  do: NITRO.update(<font color="red">:session</font>,
      span(body: :n2o.sid()))

  def event(<font color="red">:enode</font>),
  do: NITRO.update(<font color="red">:enode</font>,
      span(body: NITRO.compact(:erlang.node())))

  def event({:link, i}),
  do: [
      NITRO.clear(<font color="red">:feeds</font>),
      :kvs.feed(i) |&gt; Enum.map(fn t -&gt;
        NITRO.insert_bottom(:feeds,
          panel(body: NITRO.compact(t))) end)
    ]

  def event(<font color="red">:writers</font>),
    do:
      :writer
      |&gt; :kvs.all()
      |&gt; :lists.sort()
      |&gt; Enum.map(fn writer(id: i, count: c) -&gt;
        NITRO.insert_bottom(
          :writers,
          panel(body:
          [link(body: i, postback: {:link, i}),
           ' (' ++ NITRO.to_list(c) ++ ')']))
      end)

  def event(_), do: []

  def ram(os), do: NITRO.compact(os)
end
    </code></figure>

   <h3>Рутер</h3>
   <p>
kvs — KVS.Index<br>
    </p>

    </section>
    <section>

    <p>Кодът на приложението може да бъде намерен в следните хранилища:</p>

    <p>— <a href="https://github.com/o7/plm">o7/plm</a></p>

    </section>
</main><footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2019</footer>
<script type="text/javascript" src="https://n2o.dev/drop.js"></script>
</body>
</html>
